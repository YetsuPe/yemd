form {
  @extend %display--flex;
  @extend %flex-direction--column;
}

@mixin style-placeholders () {
  font-weight: 400;
  color:$color-secondary-text;
  opacity: 0;
  @include animation( fadeIn $time-animation ease forwards); 
}

%labels {
  pointer-events: none;
  position: absolute;
  color: $color-secondary-text;
  height: 1em;
  @include transition( all $start_animation );
}

%placeholder {
  &::-webkit-input-placeholder,
  &:-moz-placeholder {
    @include style-placeholders;
  }
}

//reset

select,
textarea,
input {
  border: 0 ;
  outline: 0;
}

textarea {
  @extend %placeholder;
  width: 100%;
  resize: none;
}

  input[type="text"],
  input[type="password"],
  input[type="number"],
  input[type="email"],
  input[type="tel"],
  input[type="search"] {
    line-height: 1;
    width: 100%;
    padding: 0;
    height: 1em; //Fix later - em(21)
    @extend %placeholder;
    
  }

.valid {
  @extend %labels;
    //margin-bottom: em(4);
    /*
    &.enter{  
      @extend %animation-labelIn;
      & ~ input {
        @extend %animation-moveInputDown;
      }
    }
    &.leave{ 
      @extend %animation-labelOut;
      & ~ input {
        @extend %animation-moveInputUp;
      }
    }
    &.showD{
      @extend %display--block;
    }
    */
}

  .invalid {
    display: none;
    color: $color-error;
    margin-top: em(4);
    &.enter{  
      @extend %animation-labelErrorIn;
      & ~ input {
        @extend %animation-moveInputUp;
      }
    }
    &.leave{ 
      @extend %animation-labelErrorOut;
      & ~ input {
        @extend %animation-moveInputDown;
      }
    }
    &.showD{
      @extend %display--block;
    }
  }

.wrapper {
  display: flex;
  flex-direction: column;
  padding: em(16);
  height: em(48);
  @include transition( height $start_animation );
  @extend %position--relative;

  &:after {
    content:'';
    position: absolute;
    bottom: em(7);
    left: 1em;
    @include calc('width', '100% - 2em' );
    border-bottom: em(2) solid lighten($color-secondary-text, 50%);
    @include transition( all $start_animation );
  }

  &.focus {
    height: em(72);
    .valid {
      position: relative;
      font-size: 14px;
      height: em(16, 14);
      margin-bottom: em(8, 14);
    }
  }
  
  &.current {

    &:after {
      bottom: em(7);
      border-bottom: em(2) solid $color-primary;
    }
    .valid {
      color: $color-primary;
    }
  }

  /*
  &.hide {
    display: none;
  }
  
  

  &.error {
    &:after {
      bottom: em(31);
    }
  }

  &.open {
    height: em(72);
    .valid {
      display: block;
    }
    &:after {
      border-bottom: 0;
    }
  }

  &.open--image {
    height: auto;
    padding: 0;
    input {
      position: absolute;
      opacity: .2;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
    }
    &:after {
      border-bottom: 0;
    }
    img {
      width: 100%;
    }
  }

  &.open--all {
    height: em(72);
    .valid {
      display: block;
    }
  }

  &.open--select {
    height: em(52);
    select {
      width: 100%;
    }
  }

  &.open--select-w-second-action {
    height: em(52);
    &:after {
      @include calc('width', ' 100% - #{ em(40) } ' );
    }
    select {
      @include calc('width', ' 100% - #{ em(40) } ' );
    }
    span {
      color: $color-secondary;
      width: em(40, 24);
      text-align: center;
      position: absolute;
      font-size: 24px;
      right: 0;
      top: em(16, 24);
    }
  }

  &.open--checkbox {
    display: flex;
    flex-wrap: wrap;
    height: em(72);
    .valid {
      width: 100%;
      display: block;
    }
    &:after {
      border-bottom: 0;
    }
  }
  */
}

%button {
  display: flex;
  align-items: center;
  font-size: 16px;
  min-width: em(88);
  max-width: 100%;
  text-transform: uppercase;
  text-align: center;
  border: 0; 
  height: em(36);
  
  &:hover { cursor: pointer;}
  &:nth-of-type(2) {
    margin: em(8) 0 ;
  }
}

.button {
  @extend %button;
  @extend %zDepth-2;
  padding: em(8) 1em;
  color:$color-text-white ;
  background-color: $color-primary ;

}

.button--second {
  @extend %button;
  @extend %zDepth-2;
  padding: em(8) 1em;
  color: $color-text ;
  background-color: $color-secondary ;
}

.button--default {
  @extend %button;
  @extend %zDepth-2;
  padding: em(8) 1em;
  color: $color-black ;
  background-color: darken($color-default, 12.5%) ;
}

.button--flat {
  @extend %button;
  @extend %zDepth-0;
  justify-content: flex-end;
  color: $color-primary ;
  background-color: transparent;
}



// slider
input[type=range] {
 -webkit-appearance: none;
  width: 100%;
}
input[type=range]:focus {
  outline: none;
}

input[type=range]::-webkit-slider-thumb {
  position: relative;
  top: - em(7);
  height: em(16);
  width: em(16);
  border-radius: 50%;
  background: #c7c7c7;
  cursor: pointer;
  -webkit-appearance: none;
  @include transition( all .2s $mode-animation );
  //margin-top: -14px;
}

input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: em(3);
  cursor: pointer;
  @include transition( all .2s $mode-animation );
  background: lighten($color-secondary-text, 60%);
  border-radius: 1px;
}

input[type=range]:focus::-webkit-slider-runnable-track,
input[type=range]:focus::-webkit-slider-thumb {
  background: $color-success;
}

input[type=range]:focus::-webkit-slider-thumb {
  height: em(24);
  width: em(24);
  top: - em(11);
}


/** switch**/

.switch {
  position: relative;
  display: inline-block;
  vertical-align: top;
  width: 40px;
  height: 12px;
  padding: 0;
}

.switch-input {
 position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  width: 100%;
  height: 20px;
  z-index: 2;
  margin: 0;
  cursor: pointer;
}

.switch-track {
  position: relative;
  top: 4px;
  display: block;
  height: inherit;
  background-color:  rgba($color-black, .26) ;
  border-radius: 8px;
  @include transition ( all 0.15s ease-out );
  @include transition-property( opacity background );
}
.switch-input:checked ~ .switch-track {
  background: $color-divider;
}
.switch-input:checked ~ .switch-track:before {
  opacity: 0;
}
.switch-input:checked ~ .switch-track:after {
  opacity: 1;
}

.switch-thumb {
  position: absolute;
  top: 0;
  left: 0;
  width: 20px;
  height: 20px;
  background: #FAFAFA;
  border-radius: 100%;
  @extend %zDepth-1;
  @include transition ( all 0.15s ease-out );
}

.switch-input:checked ~ .switch-thumb {
  left: 20px;
  background: $color-success;
}

.switch-green > .switch-input:checked ~ .switch-track {
  background:  rgba($color-success, .5) ;
}

/****** radio  ****/

.checkbox {
  @extend %display--flex;
  height: em(20);
  label {
    margin-left: .5em;
  }
  margin-left: 1em;
  &:first-of-type {
    margin-left: 0;
  }
}

.checkbox input[type=radio]{
  position: absolute;
  width: 20px;
  height: 20px;
  opacity: 0;
}


.checkbox label:hover{
  background: rgba(255,255,255,0.45);
}

.checkbox .check{
  pointer-events: none;
  display: block;
  position: relative;
  border: 2px solid rgba( $color-black, .54);
  border-radius: 100%;
  height: em(20);
  width: em(20);
  @include transition ( all 0.15s ease-out );
}

input[type=radio]:checked ~ .check {
  border: 2px solid $color-success;
}

input[type=radio]:checked ~ .check .inside{
  display: block;
  position: relative;
  top: 2px;
  left: 0;
  background-color: $color-success;
  border-radius: 100%;
  height: 12px;
  width: 12px;
  margin: auto;
  @include transition ( all 0.15s ease-out );
}

input[type=radio]:checked ~ label{
  color: $color-success;
}

/************* layout ********/
.form__controls { //is the same modal_controls
  display: flex;
  justify-content: flex-end;
  align-items: center;
  height: em(48);
  padding-right: 1em;

  > * {
    margin-right: em(8);
    &:last-child {
      margin-right: 0;
    }
  }
}

@media screen and (min-width: $media-md) {

  .form__controls { 
    height: em(64);
  }


}